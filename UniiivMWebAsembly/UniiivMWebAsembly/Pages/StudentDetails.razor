@page "/student-details/{StudentId}" // Assurez-vous que le nom du paramètre correspond à l'URL
@using UniiivMWebAsembly.Services
@using UniiivMWebAsembly.Entities
@inject StudentService StudentService

<h3>Student Details</h3>

@if (errorMessage != null)
{
    <p class="text-danger">@errorMessage</p>
}
else if (student != null)
{
    <dl class="row">
        <dt class="col-sm-2">
            ID:
        </dt>
        <dd class="col-sm-10">
            @student.ID
        </dd>
        <dt class="col-sm-2">
            Last Name:
        </dt>
        <dd class="col-sm-10">
            @student.LastName
        </dd>
        <dt class="col-sm-2">
            First Name:
        </dt>
        <dd class="col-sm-10">
            @student.FirstMidName
        </dd>
        <dt class="col-sm-2">
            Enrollment Date:
        </dt>
        <dd class="col-sm-10">
            @student.EnrollmentDate.ToShortDateString()
        </dd>
        <!-- Ajoutez d'autres détails ici -->
    </dl>
}
else
{
    <p><em>Loading...</em></p>
}

@code {
    [Parameter]
    public string StudentId { get; set; } // Assurez-vous que le nom du paramètre correspond à l'URL

    private int parsedStudentId;
    private Student student;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        if (int.TryParse(StudentId, out parsedStudentId))
        {
            // Si la conversion est réussie, procédez à la récupération des données de l'étudiant
            try
            {
                student = await StudentService.GetStudentAsync(parsedStudentId);
                if (student == null)
                {
                    errorMessage = $"Student with ID {parsedStudentId} not found.";
                }
            }
            catch (Exception ex)
            {
                errorMessage = $"An error occurred while trying to get student details: {ex.Message}";
            }
        }
        else
        {
            // Si la conversion échoue, affichez un message d'erreur
            errorMessage = "The provided student ID is not valid.";
        }
    }
}
