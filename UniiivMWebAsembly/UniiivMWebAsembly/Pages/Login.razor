@page "/login"
@using UniiivMWebAsembly.Services
@inject UserService UserService
@inject NavigationManager Navigation

<div class="container">
    <div class="row h-100 justify-content-center align-items-center">
        <div class="col-md-6">
            <h3>Login</h3>

            <EditForm Model="@loginModel" OnValidSubmit="@HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <label for="username">Username</label>
                    <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
                </div>

                <div class="form-group">
                    <label for="password">Password</label>
                    <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
                </div>

                <button type="submit" class="btn btn-primary">Login</button>
            </EditForm>

            @if (loginError)
            {
                <div class="alert alert-danger" role="alert">
                    Invalid username or password.
                </div>
            }
            <div class="mt-3">
                <p>Don't have an account? <a href="/register">Register</a></p>
            </div>

        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new LoginModel();
    private bool loginError = false;

    private async Task HandleValidSubmit()
    {
        loginError = false; // Reset the error flag before the attempt

        var result = await UserService.AuthenticateAsync(loginModel.Username, loginModel.Password);
        if (result)
        {
            Navigation.NavigateTo("/"); // Redirect to home page on successful login
        }
        else
        {
            loginError = true; // Display an error message if authentication fails
        }
    }

    public class LoginModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }
}
